{"version":3,"sources":["<no source>","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/legacy/style/tool/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_pseudo.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/icon/tool/_legacy.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_size.scss","%3Cinput%20css%20-QZjH3%3E","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/typography/tool/_list.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/spacing/tool/_space.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/component/button/style/_scheme.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/color/tool/_element.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/selector/tool/_nest.scss","file:///Users/jhourdeaux/workspace/project/ds/composants/dsfr/src/core/style/color/tool/_disabled.scss"],"names":[],"mappings":"AAAA;;GAAA;ACcI;ECEF;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,WAAA;IAGA,YAAA;ECtDJ;;EHWA;;;;;;;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,aAAA;IAGA,cAAA;EC7CJ;;EHEA;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,cAAA;IAGA,eAAA;ECpCJ;;EHPA;;;;;;;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,WAAA;IAGA,YAAA;EC3BJ;;EHhBA;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,aAAA;IAGA,cAAA;EClBJ;;EHzBA;;;;;;;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,WAAA;IAGA,YAAA;ECTJ;;EHlCA;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;IARA,0DAFI;IC0CF,WAAA;IAGA,YAAA;ECAJ;;EH3CA;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;IARA,8DAFI;IC0CF,WAAA;IAGA,YAAA;ECYJ;;ECDE;IACE,qBAAA;EDUJ;;ECPE;IACE,qBAAA;EDUJ;;ECPE;;ICnDE,eAXA;IAOA,aAPA;IAQA,gBARA;EF4EJ;;EH5EA;;;;;;;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,WAAA;IAGA,YAAA;ECuCJ;;EHlFA;;;;;;;;ICME,6BAAA;IACA,qBAAA;IACA,4BAAA;ICgCE,WAAA;IAGA,YAAA;ECgDJ;;EGrGA;IC0BE,yBAAA;IAAA,cAAA;EJoFF;;EK7GE;IDkDI,yBAAA;EJgEN;;EKlHE;IDsDI,yBAAA;EJ+DN;;EM7ES;;IFfP,cAAA;IAAA,yBAAA;EJsGF;;EGzHE;ICiFE,6BAAA;IA9DF,cAAA;IAAA,mCAAA;EJiHF;;EIhDM;IACE,qCAAA;EJkDR;;EI/CM;IACE,oCAAA;EJiDR;;EMxGS;;IFfP,cAAA;IAAA,mCAAA;IA8DE,6BAAA;EJwEJ;;EIrEM;;IACE,qCAAA;EJiFR;;EI9EM;;IACE,oCAAA;EJgFR;;EGpKE;IC4EE,6BAAA;IA9DF,cAAA;IAAA,mCAAA;EJ4JF;;EI3FM;IACE,qCAAA;EJ6FR;;EI1FM;IACE,oCAAA;EJ4FR;;EMnJS;;IFfP,cAAA;IAAA,mCAAA;IA8DE,6BAAA;EJmHJ;;EIhHM;;IACE,qCAAA;EJ4HR;;EIzHM;;IACE,oCAAA;EJ2HR;;EG1ME;;;ICuEE,6BAAA;IA9DF,cAAA;EJuMF;;EItIM;;;IACE,qCAAA;EJwIR;;EIrIM;;;IACE,oCAAA;EJuIR;;EM9LS;;;;;;IFfP,cAAA;IA8DE,6BAAA;EJyJJ;;EItJM;;;;;;IACE,qCAAA;EJ6JR;;EI1JM;;;;;;IACE,oCAAA;EJ4JR;AAlJF","file":"button.legacy.css","sourcesContent":[null,"////\n/// Legacy Tool : legacy\n/// @group legacy\n////\n\n/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin not-legacy($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn::before, .fr-btn::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn::before, .fr-btn::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-btn[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n  .fr-btn--sm::before, .fr-btn--sm::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn--sm::before, .fr-btn--sm::after {\n    width: 0.75rem;\n    height: 0.75rem;\n  }\n  .fr-btn--sm[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--sm[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--sm[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--sm[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn--sm[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--sm[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--sm[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--sm[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--sm[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-btn--lg::before, .fr-btn--lg::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn--lg::before, .fr-btn--lg::after {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n  .fr-btn--lg[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--lg[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--lg[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--lg[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn--lg[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class^=fr-icon-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--lg[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class*=\" fr-icon-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--lg[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class^=fr-fi-]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after, .fr-btn--lg[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::before, .fr-btn--lg[class*=\" fr-fi-\"]:not([class^=fr-btn--icon-]):not([class*=\" fr-btn--icon-\"])::after {\n    width: 2rem;\n    height: 2rem;\n  }\n  .fr-btn--close::before, .fr-btn--close::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn--close::before, .fr-btn--close::after {\n    background-image: url(\"../../icons/system/close-line.svg\");\n  }\n  .fr-btn--close::before, .fr-btn--close::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-btn--display::before, .fr-btn--display::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btn--display::before, .fr-btn--display::after {\n    background-image: url(\"../../icons/system/fr--theme-fill.svg\");\n  }\n  .fr-btn--display::before, .fr-btn--display::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  ul.fr-btns-group {\n    list-style-type: none;\n  }\n\n  ol.fr-btns-group {\n    list-style-type: none;\n  }\n\n  ul.fr-btns-group,\nol.fr-btns-group {\n    padding-left: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::after, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::after, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::after, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::after, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::after, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::after, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::before, .fr-btns-group--sm:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::after {\n    width: 1rem;\n    height: 1rem;\n  }\n  .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::after, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::after, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::after, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::after {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n  .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-icon-]::after, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-icon-\"]::after, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class^=fr-fi-]::after, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::before, .fr-btns-group--lg:not([class^=fr-btns-group--icon-]):not([class*=\" fr-btns-group--icon-\"]) .fr-btn[class*=\" fr-fi-\"]::after {\n    width: 2rem;\n    height: 2rem;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn {\n    background-color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn:hover {\n    background-color: #1212ff;\n  }\n  .fr-btn:active {\n    background-color: #2323ff;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn {\n    color: #f5f5fe;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn:disabled, a.fr-btn:not([href]) {\n    color: #929292;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn:disabled, a.fr-btn:not([href]) {\n    background-color: #e5e5e5;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--secondary {\n    background-color: transparent;\n  }\n  .fr-btn--secondary:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-btn--secondary:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--secondary {\n    color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--secondary {\n    box-shadow: inset 0 0 0 1px #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--secondary:disabled, a.fr-btn--secondary:not([href]) {\n    color: #929292;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--secondary:disabled, a.fr-btn--secondary:not([href]) {\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--secondary:disabled, a.fr-btn--secondary:not([href]) {\n    background-color: transparent;\n  }\n  .fr-btn--secondary:disabled:hover, a.fr-btn--secondary:not([href]):hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-btn--secondary:disabled:active, a.fr-btn--secondary:not([href]):active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary {\n    background-color: transparent;\n  }\n  .fr-btn--tertiary:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-btn--tertiary:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary {\n    color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary {\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary:disabled, a.fr-btn--tertiary:not([href]) {\n    color: #929292;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary:disabled, a.fr-btn--tertiary:not([href]) {\n    box-shadow: inset 0 0 0 1px #e5e5e5;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary:disabled, a.fr-btn--tertiary:not([href]) {\n    background-color: transparent;\n  }\n  .fr-btn--tertiary:disabled:hover, a.fr-btn--tertiary:not([href]):hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-btn--tertiary:disabled:active, a.fr-btn--tertiary:not([href]):active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary-no-outline, .fr-btn--close, .fr-btn--display {\n    background-color: transparent;\n  }\n  .fr-btn--tertiary-no-outline:hover, .fr-btn--close:hover, .fr-btn--display:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-btn--tertiary-no-outline:active, .fr-btn--close:active, .fr-btn--display:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary-no-outline, .fr-btn--close, .fr-btn--display {\n    color: #000091;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary-no-outline:disabled, a.fr-btn--tertiary-no-outline:not([href]), a.fr-btn--close:not([href]), a.fr-btn--display:not([href]), .fr-btn--close:disabled, .fr-btn--display:disabled {\n    color: #929292;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .fr-btn--tertiary-no-outline:disabled, a.fr-btn--tertiary-no-outline:not([href]), a.fr-btn--close:not([href]), a.fr-btn--display:not([href]), .fr-btn--close:disabled, .fr-btn--display:disabled {\n    background-color: transparent;\n  }\n  .fr-btn--tertiary-no-outline:disabled:hover, a.fr-btn--tertiary-no-outline:not([href]):hover, a.fr-btn--close:not([href]):hover, a.fr-btn--display:not([href]):hover, .fr-btn--close:disabled:hover, .fr-btn--display:disabled:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  .fr-btn--tertiary-no-outline:disabled:active, a.fr-btn--tertiary-no-outline:not([href]):active, a.fr-btn--close:not([href]):active, a.fr-btn--display:not([href]):active, .fr-btn--close:disabled:active, .fr-btn--display:disabled:active {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n}","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: disc;\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n@mixin enable-list-style-legacy($unify: false) {\n  $ul: ul;\n  $ol: ol;\n\n  @if $unify {\n    $ul: selector-associate('&', 'ul');\n    $ol: selector-associate('&', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: disc;\n    }\n\n    #{$ol} {\n      list-style-type: decimal;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(4v);\n      @include margin-y(2v);\n    }\n  }\n}\n\n@mixin disable-list-style-legacy($unify: false) {\n  $ul: '#{&} ul';\n  $ol: '#{&} ol';\n\n  @if $unify {\n    $ul: selector-associate('#{&}', 'ul');\n    $ol: selector-associate('#{&}', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: none;\n    }\n\n    #{$ol} {\n      list-style-type: none;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(0);\n      @include margin-y(0);\n    }\n  }\n}\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// button Scheme\n/// @group button\n////\n\n@mixin _button-scheme($legacy: false) {\n  #{ns(btn)} {\n    @include scheme-element-bg-color(action-high blue-france, (legacy:$legacy, hover: true));\n    @include scheme-element-text-color(inverted blue-france, (legacy:$legacy));\n\n    @include disabled((legacy: $legacy, text: true, background: true, can-be-link: true));\n\n    // Outline variant\n    &--secondary {\n      @include btn-kind-scheme(2, $legacy);\n    }\n\n    // Grey outline variant\n    &--tertiary {\n      @include btn-kind-scheme(3, $legacy);\n    }\n\n    // Ghost variant\n    &--tertiary-no-outline,\n    &--close,\n    &--display {\n      @include btn-kind-scheme(4, $legacy);\n    }\n  }\n}\n","////\n/// Core Color Tools : Element\n/// @group core\n////\n\n$ACCENT: none;\n\n@mixin _scheme-element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map-get($options, legacy);\n  $important: map-get($options, important);\n  $hover: map-get($options, hover);\n  $standalone: map-get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy {\n    $legacy-target: ie11;\n  }\n\n  $tokens: normalise-tokens($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: get-colors($tokens, $type, $options);\n  $result: get-result($colors, $value);\n  $result: important($result, $important);\n\n  @include legacy($legacy-target) {\n    #{$prop}: #{$result};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and length($tokens) == 1) {\n    $nest-hover: null;\n    $prop-hover: --hover;\n    $result-hover: #{important(get-color(nth($tokens, 1), decision, (var: true, hover: true)), $important)};\n    $nest-active: null;\n    $prop-active: --active;\n    $result-active: #{important(get-color(nth($tokens, 1), decision, (var: true, active: true)), $important)};\n\n    @if $legacy or $standalone {\n      $type: hex;\n      $option: (theme: light);\n\n      $nest-hover: '&:hover';\n      $prop-hover: $prop;\n      $result-hover: #{important(get-color(nth($tokens, 1), hex, (hover: true)), $important)};\n      $nest-active: '&:active';\n      $prop-active: $prop;\n      $result-active: #{important(get-color(nth($tokens, 1), hex, (active: true)), $important)};\n    }\n\n    @include legacy($legacy-target) {\n      @include nest($nest-hover) {\n        #{$prop-hover}: #{$result-hover};\n      }\n\n      @include nest($nest-active) {\n        #{$prop-active}: #{$result-active};\n      }\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-bg-color($tokens, $options:()) {\n  @if not map-has-key($options, hover) {\n    $options: map-merge($options, (hover: inherit));\n  }\n  @include _scheme-element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin scheme-element-bg-transparent($options) {\n  $legacy: map-get($options, legacy);\n  $important: map-get($options, important);\n  $hover: map-get($options, hover);\n  $tokens: normalise-tokens(default grey, background);\n  $value: important(transparent, $important);\n\n  @if $legacy {\n    @include legacy(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-bg-image-color($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: get-tokens-length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: unquote('$color##{$i}');\n      $transformed: append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _scheme-element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-text-color($tokens, $options) {\n  @include _scheme-element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-fill-color($tokens, $options) {\n  @include _scheme-element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin scheme-element-border-color($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map-has-key($options, side) {\n    $prop:border-#{map-get($options, side)};\n  }\n  @include _scheme-element($prop, border, $tokens, $options, $value);\n}\n\n@mixin scheme-element-no-border($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    border: 0;\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($tokens, $options, $value:1px solid $COLOR) {\n  @include _scheme-element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: get-tokens-length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if map-has-key($box-shadows, $v) {\n      $transformed: append($transformed, _get-box-shadow($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _scheme-element(box-shadow, border, $tokens, $options, space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin scheme-element-no-box-shadow($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    box-shadow: none;\n  }\n}\n","////\n/// Core Tool : Selector nest\n/// @group core\n////\n\n@mixin nest($selector: null) {\n  @if $selector {\n    #{$selector} {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Core Tool : Color disabled\n/// @group core\n////\n\n/// Applique les couleurs disabled sur l'élément\n/// @access public\n/// @param {map} map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin disabled-colors($options: ()) {\n  $legacy: map-get($options, legacy);\n  $text: map-get($options, text);\n  $background: map-get($options, background);\n  $box-shadow: map-get($options, box-shadow);\n\n  @if $text {\n    @include scheme-element-text-color(disabled grey, (legacy: $legacy));\n  }\n\n  @if $background {\n    @include scheme-element-bg-color(disabled grey, (legacy: $legacy));\n  }\n\n  @if $box-shadow == true {\n    @include scheme-element-box-shadow-color(disabled grey, (legacy: $legacy));\n  }\n  @else if $box-shadow {\n    @include scheme-element-box-shadow-color(disabled grey, (legacy: $legacy), $box-shadow);\n  }\n}\n/// Applique les couleurs disabled sur l'élément avec les sélecteurs appropriés\n/// @access public\n/// @param {map} map des options :\n///   - can-be-link {boolean}: ajoute le sélecteur de lien sans href.\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - background {boolean}: true, applique le token background disabled sur la couleur de fond\n///   - text {boolean}: true, applique le token text disabled sur la couleur de texte\n///   - box-shadow {}: si true, applique le token border disabled sur l'élément avec la box-shadow par défaut (encadré de 1 px). si une valeur de box-shadow est fournie, applique cette valeur (voir get-box-shadow)\n@mixin disabled($options: ()) {\n  $selectors: '&:disabled';\n  @if map-get($options, can-be-link) {\n    $selectors: append($selectors, selector-associate(&, 'a:not([href])'), comma);\n  }\n\n  @at-root #{$selectors} {\n    @include disabled-colors($options);\n    @content;\n  }\n}\n"]}